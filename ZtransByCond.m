function y = ZtransByCond(x,matchi,zcols)%	y = ZtransByCond(x,matchi,zcols)%		Takes array x and returns identically sized array y. The%		columns listed in vector zcols will contain z transformed values.%		The standardization is done by recognizing rows as%		duplicates depending on matching values in columns listed in%		matchi.  Each row is a single observation.  So there's no%		weighting here.   The columns listed in zcols are treated separately.%	summary: %		x 	input array; rows are observations%		matchi	vector of column indices in x that are to be matched %			to establish that observation is a duplicate and% 			should be averaged%		zcols   vector of columns to be ztransformed%% Updated 1/23/95 to use munique() call% See also diverse.m% testing%$$$ N = 20%$$$ x = [randn(N,2) < 0  randn(N,3)]  %$$$ size(x)%$$$ matchi = [1 2]%$$$ zcols = [3 5]y = x;					% copy the input matrixy(:,zcols) = nan * ones(size(y(:,zcols)));	% initialize z's to NaN[xu cxu] = munique(x(:,matchi));	% unique values of matches & counts% go through each unique match in xufor j = 1:length(cxu)  v = xu(j,:);			% these are the values we want to match  L = x(:,matchi) == v(ones(size(x,1),1),:); % logic, with 1's and 0's   L = (prod(L'))';			% column vector with 1's where all  % Use L as the selection vector  t = x(L,zcols);			% these are the rows to standardize  m = mean(t);  s = std(t);  t = (t - m(ones(size(t,1),1),:)) ./ s(ones(size(t,1),1),:);  y(L,zcols) = t;end  