function exp_spikes = fast_exp_spikes(spike_rate,duration)%exp_spike = fast_exp_spikes(spike_rate,duration)%% Generates a spike trian using inter-spike-intervals draAwn from% an exponential distribution.  This version requires that the rate and the% duration are scalars.  To simulate spike trains with changing rates, use% make_exp_spikes.m %%Inputs: spike_rate	mean firing rate (spikes/second)%        duration       duration of spike sequence (sec)%% Output: exp_spikes	vector of times (msec) when spikes occur.%% 9/8/96		mns		Wrote it.if nargin < 2  error('fast_exp_spikes requires 2 args');endif sum([size(spike_rate) size(duration)]) ~= 4  error('fast_exp_spikes requires 2 scalar args')endlast_spiketime = 0;while last_spiketime < duration  guessN = ceil(duration*spike_rate + 5*sqrt(duration*spike_rate));  % using 5 standard deviations ensures that we make a long enough list  exp_spikes = exprnd(1/spike_rate,guessN,1);  ttim = cumsum(exp_spikes);  last_spiketime = ttim(guessN);endlastspike = min(find(ttim>duration));exp_spikes = 1000 * ttim(1:lastspike);