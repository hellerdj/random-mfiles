function [ang,v] = ioc(comp1,comp2,plotoption)% function [ang,v] = ioc(comp1,comp2)%  Calculates the angle (ANG) and velocity (V) of the plaid pattern%  based on the intersection of constraints.  Ang is between 0 and 355.% Input arguments are a pair% of 3-vectors which specify the grating components.  % The 3-vector contains [DIR SF TF], where DIR is the direction of the% grating in degrees (a vertical grating is moving 0 or 180).  SF and TF are % spatial and temporal frequecny, respectively.% The approach here is fast and numerical.  It can fail.% % 3/18/99 ang now 0..355if nargin < 3, plotoption = 0; enda = comp1(1);b = comp2(1);v1 = comp1(3) / comp1(2);v2 = comp2(3) / comp2(2);slope1 = tan(deg2rad(a-90))slope2 = tan(deg2rad(b-90))% if there is a failure, try extending this rangex = [-5:.01:5];y1 = v1*sin(deg2rad(a)) + slope1*(x-v1*cos(deg2rad(a)));y2 = v2*sin(deg2rad(b)) + slope2*(x-v2*cos(deg2rad(b)));% numerical solutionind = find(abs(y2-y1)==min(abs(y2-y1)));y = mean([y1(ind) y2(ind)]);v = norm([x(ind) y]);ang = rem(360+round(atan2(y,x(ind)) * 180/pi),360);if plotoption==1	hold off	hioc1 = plot(x,y1,'b',x,y2,'r'), hold on	hl1 = line([0 v1*cos(deg2rad(a))], [0 v1*sin(deg2rad(a))]);	hl2 = line([0 v2*cos(deg2rad(b))], [0 v2*sin(deg2rad(b))]);	set(hl1,'Color','b')	set(hl2,'Color','r')	set(gca,'XGrid','on','YGrid','on','YLim',[-5 5],'XLim',[-5 5]);	hl3 = line([0 x(ind)], [0 y],'LineWidth',2,'Color','k');	% ha = arrow([0 0], [1 1.5])end