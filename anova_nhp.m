function [p,llik, df, ph1] = anova_nhp(x,t,h1) % [p,llik, df,ph1] = anova_nhp(x,t,h1) Performs anova as a nested%	hypothesis test.  Uses Poisson assumptions.  Each row of x is an%	observation.  The last column of x is the dependent variable, which%	is this case is always a count.  Each column before that represents%	a categorical variable.  t is a column vector that gives the%	duration for the count in the last column of x.  The routine tests%	for significance of each of the categories, plus one interaction%	specified as a combination of categories.  Think of the test as%	asking the question, "does it help to know that the dependent%	variable was associated with the categories specified in column 1?"%	The answer to this question is p(1).  The answer for each of the%	columns is p(i).  The function returns p and the log likelihood of%	obtaining the data under the model associated with each column%	(llik) and the degrees of freedom associated with each of these%	models.  For example, if category 1 has 4 unique values, then there%	are 4 means and 4 stdevs, or 8 df.  Optionally, a second argument,%	h1, specifies a more complicated model that a combination of%	categories might matter.  For example, if h1 = [1 2], one is testing%	for an interaction between the categorical variables in column 1 and%	column 2, i.e., this is the hypothesis that "it matters to know both%	the value in column 1 and 2."  This hypothesis is compared to the%	null hypothesis (which is basically useless) and is returned as the%	last element of p (with corresponding elements in llik and df).  It%	is also compared to the simple category models, and returned as a%	vector of p values, ph1, one pval for each of the categories.  The%	likelihoods are computed assuming a Poisson distribution.  %%	Note: The number of categories within%	each categorical variable can be any number >= 2.  There should be%	at least 3 observations for each unique value of the categorical%	variable, and at least 3 for any combination of categorical%	variables that will be analyzed for interaction.  % %	M N Shadlen,  October 24, 1995%	see also anova_nh.m%	Note df changes compared to normal case% fake data for testing% use test_anova_nhp.m%$$$  error('You forgot to comment out the test lines')if t == []  error('must supply time for Poisson case')endnc = size(x,2)-1;			% number of categoriesI = size(x,2); 				% column index for the dependent variable% compute ll under h0y = x(:,I);				% all the dependent vars, lumpedm0 = sum(y)/sum(t);			% this is the overall ratelambda = m0 * t;			% expectationsll0 = sum(log(poisspdf(y,lambda)));df0 = 1;				% 1 deg of freedom for 1 mean %% compute ll for each categorydf = nan * ones(1,nc); p = df; llik = df; % initialize the arraystoofewflag = zeros(size(p)); 			% start with a clean slatefor i = 1:nc  toofewflag = 0;  % how many unique values are there in this category  a = munique(x(:,i));  df(i) = size(a,1); 			% degrees of freedom for Poisson  m = nan * ones(size(a));   toofewflag = 0  for j = 1:length(a)    ival = a(j);			% the independent value    L = x(:,i)==ival;			% select matches    n = sum(L)				% how many?    if sum(L) < 2      sprintf('anova_nhp: too few observations');      % I used to kill the function here with an error() statement.  But I      % want to use this for batch processing.  So better to carry some      % nan's.      %      m(j) = nan;			% these nan's carry through      sumll(j) = nan;      toofewflag = 1    else      y = x(L,I); 			% collect the dependent vars      m(j) = sum(x(L,I))/sum(t(L)); 	% mean      lambda = m(j) * t(L); 		% expectation      sumll(j) = sum(log(poisspdf(y,lambda)));    end  end  % add the llik for each of the values in this category  if toofewflag     sprintf('got here, as expected')    llik(i) = nan;    p(i) = nan;  else    llik(i) = sum(sumll);    p(i) =  1 - chi2cdf(2*(llik(i)-ll0), (df(i)-df0));  endend%% now for the specific hypothesis, h1if nargin > 1  i = nc + 1;  a = munique(x(:,h1)); 	% unique row vectors in cols specified by h1  df(i) = size(a,1); 			% degrees of freedom for Poisson  m = nan * ones(size(a,1),1);		% initialize  toofewflag = 0;  for j = 1:size(a,1)    ival = a(j,:);			% the independent value vector    % next line uses the ones trick to repeat ival on every line    % the logic returns 0 or 1 as a row vector for each obs.    % we take the row products by taking the prod of transpose and then    % transpose back.  L is then a standard selection array.    L = prod((x(:,h1)==ival(ones(size(x,1),1),:))')';    n = sum(L);    if sum(L) < 2      sprintf('anova_nhp: too few observations in h1');      y = nan;      m(j) = nan;      sumll(j) = nan;      toofewflag = 1    else      y = x(L,I);      m(j) = sum(x(L,I))/sum(t(L)); 	% mean rate      lambda = m(j) * t(L); 		% expectation      sumll(j) = sum(log(poisspdf(y,lambda)));    end  end  if toofewflag    % sprintf('got here, as expected')    llik(i) = nan;    p(i) = nan;  else    % add the llik for each of the values in this category (i.e., across j)    llik(i) = sum(sumll);    % compare to null hypothesis of single mean    p(i) =  1 - chi2cdf(2*(llik(i)-ll0),df(i)-df0);  endend% compare h1 against each of the simple categoriesfor j = 1:nc  ph1(j) = 1 - chi2cdf(2*(llik(nc+1)-llik(j)), df(nc+1)-df(j));end 