function [pNest,Bfull,pYfull,Bred,pYred] = nestedMF(Y,Xfull, Xred)% function [pNest,Bfull,pYfull,Bred,pYred] = nestedMF(Y,Xfull, Xred)% Hybrid of mregress.m and nestedF.m% Uses principle of extra sum of squares on a generalized multivariate% multiple regression.%% See T.W. Anderson, 2nd Ed. Chapter 8 (Sections 8.2 and 8.3) % and Draper & Smith% % % 2/18/99 mns wrote it% Test sizes [xrows xcols] = size(Xfull);[yrows ycols] = size(Y);if xrows ~= yrows  error('X and Y must have the same number of rows')end[Bfull,pYfull,SigmaHat,L,logmaxL,rrich] = mregress(Y,Xfull);[Bred,pYred,SigmaHat,L,logmaxL,rred] = mregress(Y,Xred);% from nested F% notice that we don't have the squaring in what follows because the dot% products of the residuals are already square terms.n = size(Y,1);				% number of data observationsp = size(Y,2);				% Anderson's dim of observationsq = size(Xfull,2);			% free params, sort ofqred = size(Xred,2);dfs2 = n - p*q;				% df for our estimate of s2s2 = sum(rrich)/dfs2;			% estimate s2 from residualsextraSS2 = sum(rred) - sum(rrich); 	% extra sum of squaresextradf = p * (q-qred);			% associated dfdf = [extradf dfs2];			% to returnF = (extraSS2/extradf) / s2;pNest = 1 - fcdf(F,extradf,dfs2);