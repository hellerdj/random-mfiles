function gam_spikes = make_gam_spikes(spike_rate,order,duration)% exp_spike = make_gam_spikes(spike_rate,order,duration)%% Generates a spike trian using inter-spike-intervals drown from% a gamma distribution. % % Inputs: spike_rate				mean firing rate (spikes/second)% duration         duration of spike sequence% order						order of gamma. lower numbers are tighter -- 1 makes% the distribution exponential% Output: exp_spikes				vector of times (msec) when spikes% occur.% % if spike_rate is a vector, the spike train is divided% evenly blocks with different firing rates.  If duration% is a vector of the size of spike_rate, duration is the% duration for each mean spike_rate.% 7/12/96 mns wrote it based on Boynton's make_exp_spikes.m  % 8/19/96 mns added the exp_spikes call if order is 1if order == 1  gam_spikes = make_exp_spikes(spike_rate,duration);else  gam_spikes=[];  start=0;  if length(duration==1)    duration=ones(1,length(spike_rate))*duration/length(spike_rate);  end    for i=1:length(spike_rate)    nspikes=duration(i)*(spike_rate(i)+sqrt(5*spike_rate));    mu=1000/spike_rate(i);    gam_ISI = gamrnd(1/order,order*mu,1,ceil(nspikes));    gam_sum = cumsum(gam_ISI);    gam_sum=gam_sum(gam_sum<duration(i)*1000);    gam_spikes=[gam_spikes gam_sum+start];    start=start+duration(i)*1000;  endend