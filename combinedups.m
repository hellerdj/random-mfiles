function y = combinedups(x,matchi,ni)%	y = combinedups(x,matchi,ni)%		Takes array x and returns array y with all duplicated%		rows in x averaged.  The duplicate condition is defined%		by equality in the columns in vector matchi.%		The averages are performed as weighted averages given a %		number in column ni.  For example, columns 1 and 3 might% 		contain parameters describing a trial type or simulation%		variables.  An array of data might contain multiple%		lines of output with the same parameters.  %		If the number of observations is in column 9, say,%		then this routine returns an array with unique%		entries in columns 1 and 3 and with weighted averages%		in the rest of the columns (except 9).%	summary: %		x 	input array; rows are observations%		matchi	vector of column indices in x that are to be matched %			to establish that observation is a duplicate and% 			should be averaged%		ni	column index containing counts or weight.  This value%			determines the weights assigned at averaging.%			It is incremented in the output array to reflect the%			new combined count or weight. (If unspecified, it%			is assumed to be 1)%j = 1;		% row number for output matrix[nr nc] = size(x);if (nargin == 2)	sprintf('No weights specified.  Assuming 1.')	x = [x ones(nr,1)];	% append column of 1's to x 	[nr nc] = size(x);	% re-establish row, column count 	ni = nc;		% ni is last column end% of the nc columns, we will be incrementing some of the column and leaving% some alone.  The columns we increment by averaging are all but the % the match and count columns.  Their indices will be in tci.tci = 1:nc;tci([matchi ni]) = [];% take the 1st row of x and copy it to y.  This gets us started.y = x(1,:);for i = 2:nr  % in this loop we step through the rows of the input matrix  % question 1: have we seen these parameters before  [mr mc] = size(y);	% we need to know y's dimensions  nomatchflag = 1;  for j = 1:mr    % in this loop we step through the output array and see if we     % find a match    if x(i,matchi) == y(j,matchi)	% increment appropriate columns of jth row in y with ith row of x	% as a weighted average.  Then increment the counts (weights) directly	y(j,tci) = (y(j,ni) * y(j,tci) + x(i,ni) * x(i,tci)) / (y(j,ni) + x(i,ni));	y(j,ni) = y(j,ni) + x(i,ni);	% set nomatchflag to 0	nomatchflag = 0;	break;    end  end  if nomatchflag == 1    % tack the ith row of x on to y    y = [y; x(i,:)];  endend