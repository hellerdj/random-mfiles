function [params,llik,pred] = isiRampFit(data,fitopt,t4pred)% %   data is a vector of spike arrival times.  The idea is to fit a ramp of%   instantaneous spike rate to them.  This is a 4 parameter fit.  params 1%   and 2 are the low and high spike rates, respectively.  Params 3 and 4%   are the start and ending time of the ramp.   DATA is in the form of%   spike arrival times.  Just a vector (column or row).%   FITOPT is a string that specifies the model to be fit.  Currently only%   'ramp' is valid. %   T4PRED is an optional vector of times for forming predictions.  If this%   is not specified, the predicted values will correspond to the times in%   data(:,2) %   %	usage: [params,llik,pred,isi_data] = isiRampFit(data,fitopt,t4pred)%	Return values are%	   PARAMS.  See above.   %	   LLIK, the log likelihood of the fit%	   PRED,  a vector of predicted instantaneous rates.  These are%	   computed at the times specified in isi_data(:,2) unless a 3rd%	   argument, t4pred, is given, in which case they are computed at%	   the times in this vector.  PRED is usually a column vector, but%	   will match the dimensions of t4pred if this is specified.  %	   ISI_DATA is just a recoding of the spike arrival times into a 2%	   column matrix. Column 1 contains n-1 ISI vals and column 2%	   contains the time of the earlier of the spikes that define the%	   ISI.  This is the format of the data that we will fit.  %	   Note that the instantaneous rate is 1./ISI_DATA(:,1)%global Data;data = data(:);				% column vectorn = length(data);Data = [data(2:n) - data(1:n-1), data(1:n-1)];nn = n - 1;% generate a 1st guessx = Data(:,1);				% all the isi's% compute a running meanboxcar = 2* floor(length(data)/5) + 1% boxcar = 11; rm = [boxcar ./ (data(boxcar:nn) - data(1:nn-boxcar+1))  data((floor(boxcar/2)+1):nn-floor(boxcar/2))] irate = 1./x; 				% instant. ratemeanrate = mean(irate);maxrate = max(irate);minrate = min(irate);%$$$ meanrate = mean(rm);%$$$ maxrate = max(rm);%$$$ minrate = min(rm);% generate guessesplot(rm(:,2), rm(:,1))rate0 = meanrate/3;rate_end = 1.5 * meanrate;ramp0 = .2ramp_end = .5sprintf('1st guess')q = [rate0 rate_end ramp0 ramp_end]params = fmins('isiramp_err',q);llik = -(isiramp_err(params));rate0 = params(1); rate_end = params(2); ramp0 = params(3); ramp_end = params(4);slope = (rate_end - rate0) / (ramp_end - ramp0);if nargin > 1  t = t4pred(:);  % call includes time values for construction of rate  pred = rate0 .* (t < ramp_end) + (slope .* ((t > ramp0) & (t < ramp_end)) .* (t - ramp0)) + rate_end .* (t >= ramp_end)else  t = Data(:,2);  pred = rate0 * (t < ramp_end) + (slope * ((t > ramp0) & (t < ramp_end)) .* (t - ramp0)) + rate_end .* (t >= ramp_end)end  