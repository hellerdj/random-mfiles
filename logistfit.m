function [beta,llik,pred] = logistfit(data)% LOGISTFIT  fits a logistic function to data using maximum likelihood%	maximization under binomial assumptions.  It uses LOGIST_ERR for%	error calculation.  Data must be organized as rows of observations.%	The 1st column should be a 1 if you want to estimate a 'bias' term,%	columns 2 thru n-1 are the values for the independent variables, and%	the last column contains 1 or 0 for the choice.%%	usage: [beta,llik,pred] = logistfit(data)%	Return values are%	   BETA, the coefficients corresponding to columns 1:m-1 of data.%	   LLIK, the log likelihood of the fit%	   PRED, a vector representing the prob(y=1) under the fit.%% M Shadlen 9/17/94global Data;Data = data;% generate guess[m n] = size(data);% to generate a 1st guess, we will simply convert all the 1's to .99 and% all the 0's to .01's and do a quick regression on the logits.  This is% roughly converting the 1's to logit of 3 and 0's to logit of -3y = (6 * Data(:,n)) - 3;q = Data(:,1:n-1)\y;			% this is a 1st guessfirst_guess = q;logit_err(q);% trace = 0;% tol = .01;beta = fmins('logit_err',q);if nargout > 1  llik = -logit_err(beta);endif nargout > 2  % calculate the predicted prob(resp=1) values for each observation.  qcol = beta(:);			% we need a column vector of params  z = exp(Data(:,1:n-1) * qcol); 	% mxn * nx1 = mx1 column vector  pred = z ./ (1 + z); 			% calculate the prob of getting a 1end