function ind = findnearest(a,x)%  ind = findnearest(a,x) finds the elements in vector x that are closest %  to the vals in a.  The return argument is a set of indices such that%  x(ind) is an approximation to a. Both x and a must be column vectors.% test% $$$ x = [0:.1:1]';% $$$ a =  [.35 0.33 1/sqrt(2) 0.331]'% $$$ x = [randperm(10) / 10]'% $$$ error('comment out test code')% x and a must be column vectorsif size(x,2) ~= 1 | size(a,2) ~= 1  error('x and a must be column vectors');endif isscalar(a)	d = abs(x-a);	q = find(d == min(d));	ind = q(1);                           % in case of 2 matches, take 1stelse	% sorting is expensive, so check if we need to do this	if all(diff(x) > 0)		xsort = x;		n = 1:length(x);	else		[xsort, n] = sort(x);	end	L = binLikeHist(a, xsort);	[row col] = find(L);	ind = n(col);end% x(ind)