function [ccg,ccgSP,r,rSP,tau,Ttau,lam1,lam2,ccgAtot,ccgA5,acg1Atot,acg1A5,acg2Atot,acg2A5,r_pred,r_pred5] = ccgNew(x1,x2,epoch,xSP)% [ccg,ccgSP,r,rSP,tau,Ttau,lam1,lam2,ccgAtot,ccgA5,acg1Atot,acg1A5,acg2Atot,acg2A5,r_pred,r_pred5] = ccgNew(x1,x2,epoch,xSP)% new approach to ccg, inspired by Wyeth and Sompolinsky% x1 and x2 are matrices of spikes 0's and 1's, in 1 msec bins.% The row length is the trial duration in msec % The number of rows is the number of trials (repetitions)% epoch is in msec -- this is the epoch we're going to compute over% shitload of return args are for the routines in varsim/ccg/slink% History:% 1/96  MNS wrote it% 2/20/96 mns added autocorrelogram area totalif nargin < 4	% user did not supply shift predictor	xSP = flipud(x2);end% should probably check sizes of x1,x2 and xSP...T = size(x1,2);N1 = sum(x1')';N2 = sum(x2')';NSP = sum(xSP')';a1 = subplot(2,2,1);plot(N1,N2,'.');r = munique(diag(corrcoef([N1 N2]),-1));rSP = munique(diag(corrcoef([N1 NSP]),-1));% Expectations%  For N_k this is a scalarE_N1 = mean(N1);E_N2 = mean(N2);E_NSP = mean(NSP);lam1 = E_N1/T;lam2 = E_N2/T;lamSP = E_NSP/T;Ttau = T-abs(-epoch:epoch);% plot(tau,Ttau)Ttau(find(Ttau==0)) = nan * ones(size(Ttau(find(Ttau==0))));padx1 = [zeros(size(x1,1),epoch) x1 zeros(size(x1,1),epoch)];padx2 = [zeros(size(x2,1),epoch) x2 zeros(size(x2,1),epoch)];padxSP = [zeros(size(xSP,1),epoch) xSP zeros(size(xSP,1),epoch)];for tau = -epoch:epoch	% fprintf(1,'%d',tau);	E_S_x1x2tau(epoch+1+tau) = mean(nansum((padx1(:,epoch+tau+1:T+epoch+tau) .* padx2(:,epoch+1:epoch+T))'));	E_S_x1x1tau(epoch+1+tau) = mean(nansum((padx1(:,epoch+tau+1:T+epoch+tau) .* padx1(:,epoch+1:epoch+T))'));	E_S_x2x2tau(epoch+1+tau) = mean(nansum((padx2(:,epoch+tau+1:T+epoch+tau) .* padx2(:,epoch+1:epoch+T))'));	E_S_x1xSPtau(epoch+1+tau) = mean(nansum((padx1(:,epoch+tau+1:T+epoch+tau) .* padxSP(:,epoch+1:epoch+T))'));endtau = -epoch:epoch;% compute  cross correlogram, shift predictor ccg, and autoccgsccg = (1./(lam1*lam2*Ttau)) .* E_S_x1x2tau - 1;ccgSP = (1./(lam1*lamSP*Ttau)) .* E_S_x1xSPtau - 1;acg1 = (1./(lam1*lam1*Ttau)) .* E_S_x1x1tau - 1;acg2 = (1./(lam1*lam1*Ttau)) .* E_S_x2x2tau - 1;a2 = subplot(2,2,2);plot(tau,ccg)title('Raw CCG')a3 = subplot(2,2,3);plot(tau,ccgSP)title('Shift Predictor')a4 = subplot(2,2,4);plot(tau,ccg-ccgSP)title('CCG - SP')for a = [a1 a2 a3 a4]  set(a,'Box','off')end% compute the areaccgAtot = nansum(Ttau.*ccg);t5 = find(abs(tau)<=5);ccgA5 = nansum(Ttau(t5) .* ccg(t5));acg1Atot = nansum(Ttau.*acg1);acg2Atot = nansum(Ttau.*acg2);acg1A5 = nansum(Ttau(t5) .* acg1(t5));acg2A5 = nansum(Ttau(t5) .* acg2(t5));r_pred = ccgAtot / sqrt(acg1Atot * acg2Atot);r_pred5 = ccgA5 / sqrt(acg1A5 * acg2A5);