% globalEcodeHdr% globalEcodeHdr.m  This is a script (not a function) that simply declares% all the ecodes as global type variables.  Nearly all of the mfiles we% intend for this directory will call this script.  Ideally, we would% include this rather than call -- an option that can be tried if speed is% an issue.global  GORANDCD global GOCOHCDglobal ENDCD  global ALLONCDglobal ALLOFFCDglobal CORRECTCDglobal WRONGCD  global NOCHCD   global REW1CD  global LOOPCD  global PREFCD	global NULLCD	global FIX1CDglobal BIGREWCDglobal CHGFPCDglobal HEADCDglobal I_FIXXCD	global I_FIXYCD	global I_STXCD	global I_STYCD	global I_STDIACDglobal I_SPDCD	global I_VNVCD	global I_TRG1XCDglobal I_TRG1YCDglobal I_DOTDIRCDglobal I_COHCD		global I_TRG2XCDglobal I_TRG2YCDglobal I_SEEDCD	global CHMADECD	global EYEHLDCD	global I_TRIALIDCDglobal I_STIMDURCDglobal FAILCD   % Event codes specific per laboratory. global FPONCDglobal FPONBLINKCDglobal FPOFFBLINKCDglobal FPDIMCDglobal FPOFFCDglobal REWCD global STIMCDglobal STOFFCD global STONBLINKCD 	% stim blink global STOFFBLINKCD 	% stim blink off global PHIONCD  	% phi blink on global PHISTARTCD 	% phi sequence started global PHIENDCD 	% phi sequence ended global BASECD	        % Code that can be modified by an			% action return.  Leave with 300 consecutive		        %  unused numbers.   global STBONCDglobal STBOFFCD global ANSWERCD%  when the mirror is flicked to blank the image, this code goes out global BLANKCD% local paradigm EVENT codes global TARGONCDglobal TARGOFFCDglobal TARGON1CDglobal TARGON2CDglobal TARG1OFFglobal TARG2OFFglobal BRANCHCDglobal ONSTABCDglobal ONSLIPCDglobal ONSTPCDglobal ONRMPCDglobal OFFSTABCglobal DARK global OKNSTARTglobal OKNSAT global OKAN % defines for rampflags global RS_ENDLSTglobal RS_CDONEglobal RS_ADONEglobal RS_MONITORglobal RS_TDONEglobal RS_SACglobal RS_STABglobal RS_OFFglobal RS_SLIPglobal RS_STPglobal RS_RMPglobal RS_RAMP % Paradigm Ecodes global EYINWD global SACMAD global PURSCD global BCKDRK global BCKLIT global TGBLCD global TGBLOF global TARGON global TARGOF global STABON global STABOF global TTGBLC global TSTABO global TSTIMC global TTRGON global TFPNBKglobal TVDISglobal TVOFF global ELESTM global TVACC global BCKNOIS global TELESTM global ELEOFF  %	System wide ecode defines.  Defines specific per laboratory are % located in ../ lhdr/ lcode.h. % %	For REX 1.1 the following ecode mappings exist: % ecode < 0:	Event indexes an entry in A file. (e.g. eye movement) % ecode > 0:	Event is simple epoch. (e.g. unit firing) %	Bits 14 and 13 are special bits used as masks. % In addition, all events with absolute value less than 100 are % reserved for system use.  Therefore, the permissable range % of event codes currently is: %	-101 to -8192 for events that index A file %	 101 to  8191 for events that are simple epochs %	Each investigator should place non-standard ecodes specific % for his use in a conditionally compiled section. %  % %----------------------------------------------------------------------- %		System constants;  these are not ecodes. %----------------------------------------------------------------------- % global  INIT_MASKglobal  CANCEL_MASK global  YES	 % arguments for score function global  NOglobal  OPEN_W	 % arguments for setdata function-		 % manipulates analog window  global  CLOSE_Wglobal  CANCEL_Wglobal  EYEH	 % mask to test eyeflag bits;  if bit is	                 % set eye is outside window  global  EYEVglobal  EYEB  %----------------------------------------------------------------------- %		System Codes:  Don't Change %----------------------------------------------------------------------- global  STDHDRCD 	 % standard header codeglobal  MESGCD	 % code for an ASCII string messageglobal  SACONHCD 	 % horiz saccade onsetglobal  SACONVCD global  ACTRETURN 	 % non-zero code used when ecode is returned			 % from action global  ESTOPCD	 % someone stopped the event writing out  %----------------------------------------------------------------------- %		Negative Codes:  Index A file %-----------------------------------------------------------------------  global  EYEHCD 	 % horizontal eyeglobal  EYEVCD 	 % vertical eye global  MIRHCD 	 % horizontal mirrorglobal  MIRVCD	 % vertical mirror global  EMGCD 	 % emg channel  %-----------------------------------------------------------------------% %		Positive Codes:  Simple Epochs %-----------------------------------------------------------------------%    %	Spot calibration codes. global  TARGETCD 	 % target jump: location and timeglobal  EHCALCD 	 % calibration point for horizontal eyeglobal  EVCALCD 	 % calibration point for vertical eye  %	Single unit codes. % global  spikecd  (mns thinks this should not be global 4/14/97)global  UNIT1CD 	 % channel 1 units global  UNIT2CD 	 % channel 2 units  global  UNIT3CD 	 % channel 3 units  global  UNIT4CD 	 % channel 4 units  global  UNIT5CD 	 % channel 5 units  global  UNIT6CD 	 % channel 6 units global  UNIT7CD	 % channel 7 units  %	Window manipulation codes. global  WOPENCDglobal  WCLOSECDglobal  WCANCELCDglobal  WERRCDglobal  UWOPENCD	 % unit window % global  UWCLOSECD %	Standard codes.  global ENABLECD global PAUSECD 	 % paradigm stop codeglobal  STARTCD	 % trial has started global  FPONCDglobal  FPONBLINKCDglobal  FPOFFBLINKCDglobal  FPDIMCDglobal  FPOFFCDglobal  REWCD global  LISTDONECD 	 % ramp list has completed global  RDONECD	 % ramp overglobal  RTDONECD 	 % ramp timing sequence completedglobal  STIMCD global  STOFFCDglobal  STONBLINKCD 	 % stim blinkglobal  STOFFBLINKCD 	 % stim blink offglobal  PHIONCD	 % phi blink onglobal  PHISTARTCD	 % phi sequence startedglobal  PHIENDCD	 % phi sequence endedglobal  BASECD	 % Code that can be modified by an				 % action return.  Leave with 300 consecutive				 % unused numbers.        