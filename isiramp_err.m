function err = isiramp_err(q)% isiramp_err(q) returns the negative of the log likelihood of%    obtaining Data in the global arrays given a model of the underlying%    rate in the form of a delayed ramp.  The delayed ramp model has 4%    terms, q(1:4): low rate, high rate, ramp_start_time, ramp_done_time.%    The slope of the ramp can be computed by subtracting the hi and lo%    rates and dividing by the difference in done and start times.  The fit%    is for a single vector of spike arrival times.%%    parameters in vector Q.%    Data is an n by 2 matrix.  Column 1 is waiting time to next spike%    (ISI).  Column 2 is the time associated with this waiting time.  It%    should be the time of the 1st spike of the two that define the ISI. %global Data Plothandle% fake data for debugging%$$$ error('Mike, you idiot, you forgot to comment out the fake data')%$$$ q = [10 30 .5 1]%$$$ ramp0 = q(3);%$$$ ramp_end = q(4);%$$$ rate0 = q(1);%$$$ rate_end = q(2);%$$$ slope = (rate_end - rate0) / (ramp_end - ramp0);%$$$ t = [0:.01:2];%$$$ pspike = .01 * (rate0 * (t < ramp_end) + slope * ((t > ramp0) & (t < ramp_end)) + rate_end * (t >= ramp_end));%$$$ x = rand(size(t)) < pspike;%$$$ sptime = t(x);%$$$ n = length(sptime)%$$$ isi = sptime(2:n) - sptime(1:n-1);%$$$ Data = [isi' sptime(1:n-1)']%$$$ q = [10 40 .75 1]			% bad 1st guess% Routine starts here.t = Data(:,2);				% column vector of timeramp0 = q(3);ramp_end = q(4);rate0 = q(1);rate_end = q(2);slope = (rate_end - rate0) / (ramp_end - ramp0);modelrate = rate0 * (t < ramp_end) + (slope * ((t > ramp0) & (t < ramp_end)) .* (t - ramp0)) + rate_end * (t >= ramp_end);p = exppdf(Data(:,1), 1./modelrate);	% prob of getting observed isi under% exponential distribution with parameter reciprocal of expected rate.err = -sum(log(p)); 			% minus log likelihood